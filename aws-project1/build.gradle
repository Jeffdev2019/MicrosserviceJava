buildscript {
	ext {
		springBootVersion = '3.3.0-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.palantir.gradle.docker:gradle-docker:0.36.0")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.palantir.docker' version '0.36.0'
}

group = 'jeffvictor98'
version = '0.0.1-SNAPSHOT'
java {
	sourceCompatibility = '21'
}

bootJar {
	archiveBaseName = 'curso_aws_project1'
	archiveVersion = '1.0.3'
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(project.tasks.getByName('bootJar').outputs.files.singleFile))
	into("build/dependency")
}

docker {
	def bootJarTask = tasks.findByName('bootJar')

	if (bootJarTask) {
		def baseName = bootJarTask.archiveBaseName.get()
		def version = bootJarTask.archiveVersion.get()
		name "${project.group}/${baseName}"
		tags "${version}"
		copySpec.from(project.tasks.findByName('unpack').outputs).into("dependency")
		buildArgs(['DEPENDENCY': "dependency"])
	} else {
		throw new GradleException("A tarefa 'bootJar' n√£o foi encontrada.")
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'

	implementation 'org.springframework.boot:spring-boot-devtools'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
